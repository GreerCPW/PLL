// <auto-generated />
using System;
using CPW_PllDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPW_PllDB.SqlServer.Migrations
{
    [DbContext(typeof(PllDbContext))]
    [Migration("20230417213144_Initial01")]
    partial class Initial01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CPW_PllDB.CaseDataGroupDetailEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<long>("CityworksDetailDefinitionID")
                        .HasColumnType("bigint");

                    b.Property<long>("CityworksID")
                        .HasColumnType("bigint");

                    b.Property<int>("DataGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ID");

                    b.HasIndex("DataGroupID");

                    b.ToTable("CaseDataGroupDetails", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CaseDataGroupEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<long>("CityworksDataGroupDefinitionID")
                        .HasColumnType("bigint");

                    b.Property<long>("CityworksID")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.HasIndex("CaseID");

                    b.ToTable("CaseDataGroups", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CaseEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CaseStatusCode")
                        .HasColumnType("int");

                    b.Property<long>("CityworksBusinessCaseID")
                        .HasColumnType("bigint");

                    b.Property<long>("CityworksID")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("TimeCompleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("TimeCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("TimeDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<decimal>("X")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("Y")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.HasKey("ID");

                    b.ToTable("Cases", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CasePaymentTransactionEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("AmountReceived")
                        .HasPrecision(22, 4)
                        .HasColumnType("decimal(22,4)");

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<string>("GatewayID")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset>("TimeProcessed")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("TimeStarted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TransactionKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("TransactionKey")
                        .IsUnique();

                    b.ToTable("CasePaymentTransactions", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CasePaymentTransactionFeeEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("AmountPaid")
                        .HasPrecision(22, 4)
                        .HasColumnType("decimal(22,4)");

                    b.Property<long>("CityworksFeeID")
                        .HasColumnType("bigint");

                    b.Property<long>("CityworksPaymentID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("FeeAmount")
                        .HasPrecision(22, 4)
                        .HasColumnType("decimal(22,4)");

                    b.Property<int>("TransactionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TransactionID");

                    b.ToTable("CasePaymentTransactionFees", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CasePersonEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<long>("CityworksID")
                        .HasColumnType("bigint");

                    b.Property<long>("CityworksRoleID")
                        .HasColumnType("bigint");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CaseID");

                    b.HasIndex("PersonID");

                    b.ToTable("CasePersons", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CaseRelatedDocumentEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<long>("CityworksID")
                        .HasColumnType("bigint");

                    b.Property<long>("CityworksLabelID")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TempFilePath")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CaseID");

                    b.ToTable("CaseRelatedDocuments", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CaseServiceTypeEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CaseID")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.HasIndex("CaseID");

                    b.ToTable("CaseServiceTypes", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.PersonEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PersonKey")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("CPW_PllDB.CaseDataGroupDetailEntity", b =>
                {
                    b.HasOne("CPW_PllDB.CaseDataGroupEntity", null)
                        .WithMany()
                        .HasForeignKey("DataGroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CPW_PllDB.CaseDataGroupEntity", b =>
                {
                    b.HasOne("CPW_PllDB.CaseEntity", null)
                        .WithMany()
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CPW_PllDB.CasePaymentTransactionEntity", b =>
                {
                    b.HasOne("CPW_PllDB.CaseEntity", null)
                        .WithMany()
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CPW_PllDB.CasePaymentTransactionFeeEntity", b =>
                {
                    b.HasOne("CPW_PllDB.CasePaymentTransactionEntity", null)
                        .WithMany()
                        .HasForeignKey("TransactionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CPW_PllDB.CasePersonEntity", b =>
                {
                    b.HasOne("CPW_PllDB.CaseEntity", null)
                        .WithMany()
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPW_PllDB.PersonEntity", null)
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CPW_PllDB.CaseRelatedDocumentEntity", b =>
                {
                    b.HasOne("CPW_PllDB.CaseEntity", null)
                        .WithMany()
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CPW_PllDB.CaseServiceTypeEntity", b =>
                {
                    b.HasOne("CPW_PllDB.CaseEntity", null)
                        .WithMany()
                        .HasForeignKey("CaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
